name: Check Membership

on:
  workflow_dispatch:
    inputs:
      username:
        description: 'Username to check membership for'
        required: true

jobs:
  check_membership:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Check Membership
        run: |
          # Set organization name, username, and private key
          ORG_NAME="myorgpradeem"
          USERNAME="${{ github.event.inputs.username }}"
          PRIVATE_KEY="${{ secrets.PRIVATE_KEY }}"
          APP_ID="853518"
          INSTALLATION_ID="48299343"
          
          # Generate JWT token
          JWT=$(echo -n "{ \"iss\": $APP_ID }" | openssl dgst -sha256 -sign <(echo "$PRIVATE_KEY") -binary | openssl enc -base64 -A)
          
          # Get installation token
          INSTALLATION_TOKEN=$(curl -s -X POST -H "Authorization: Bearer $JWT" -H "Accept: application/vnd.github.v3+json" "https://api.github.com/app/installations/$INSTALLATION_ID/access_tokens" | jq -r .token)
          
          # Make request to GitHub API using installation token
          response=$(curl -s -o /dev/null -w "%{http_code}" -H "Authorization: token $INSTALLATION_TOKEN" -H "Accept: application/vnd.github.v3+json" "https://api.github.com/orgs/$ORG_NAME/members/$USERNAME")
          
          # Check response status
          if [ $response -eq 200 ]; then
              echo "$USERNAME is a member of $ORG_NAME."
          elif [ $response -eq 404 ]; then
              echo "$USERNAME is not a member of $ORG_NAME."
          else
              echo "Error: HTTP status code $response"
          fi
        env:
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
